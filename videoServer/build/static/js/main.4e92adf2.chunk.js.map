{"version":3,"sources":["components/videos/noDataFound.png","store/videos/types.ts","components/videos/SourceSelector.tsx","components/videos/IframeVideo.tsx","components/videos/GenericVideo.tsx","components/videos/VideoContainer.tsx","components/videos/index.tsx","store/videos/actions.ts","containers/connectedVideos/index.ts","App.js","serviceWorker.js","utils/Assert.ts","middleware/fetchMiddleware.ts","store/videos/reducers.ts","store/rootReducer.ts","index.js","store/index.ts"],"names":["module","exports","__webpack_require__","p","VideoSources","SET_SOURCE","VIDEO_FEED_REQUEST_START","VIDEO_FEED_REQUEST_SUCCESS","VIDEO_FEED_REQUEST_FAILURE","SourceSelector","props","react_default","a","createElement","className","htmlFor","id","value","source","onChange","e","videoSource","target","facebook","youtube","url","undefined","setSource","_","map","key","FacebookVideo","src","viewVideoItem","finalUrl","title","GenericVideo","controls","VideoContainer","dataMissing","noDataFound","alt","Fragment","numeral","views","format","toUpperCase","VideosPage","this","loadData","viewVideoItems","concat","videoId","React","Component","fetchVideos","types","getURL","state","isString","videos","connect","dispatch","type","Videos","App","connectedVideos","Boolean","window","location","hostname","match","fail","message","Error","Assert","isArray","isNotEmptyArray","length","isBoolean","isDefined","isUndefined","isFunction","isNull","isNumber","isObject","isNotEmptyString","isTrue","expression","isFalse","isInstanceOf","object","clazz","notNull","fetchMiddleware","_ref","getState","next","action","basicToken","shouldPerformRequest","_action$payload","payload","_action$method","method","forEach","_types","Object","slicedToArray","requestType","successType","failureType","options","headers","Content-Type","body","JSON","stringify","fetch","then","response","text","data","parse","isOk","ok","parsedResponse","errorMessage","catch","error","getTransformedVideoItem","videoItem","objectSpread","userName","defaultVideosState","rootReducer","combineReducers","arguments","store","preloadedState","middlewares","createLogger","enhancers","applyMiddleware","apply","composedEnhancers","composeWithDevTools","createStore","configureStore","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4e92adf2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noDataFound.ce8664fb.png\";","export enum VideoSources {\r\n  facebook = \"facebook\",\r\n  youtube = \"youtube\",\r\n  url = \"url\"\r\n}\r\n\r\nexport interface VideoItem {\r\n  title?: string;\r\n  source?: VideoSources;\r\n  videoId?: string;\r\n  userName?: string;\r\n  url?: string;\r\n  views?: number;\r\n}\r\n\r\nexport type ViewVideoItem = VideoItem & {\r\n  dataMissing?: boolean;\r\n  finalUrl?: string;\r\n};\r\n\r\nexport interface VideosState {\r\n  source?: VideoSources;\r\n  viewVideoItems?: ViewVideoItem[];\r\n  errorMessage: string;\r\n}\r\n\r\nexport const SET_SOURCE = \"SET_SOURCE\";\r\ninterface SetSourceAction {\r\n  type: typeof SET_SOURCE;\r\n  source?: VideoSources;\r\n}\r\n\r\nexport const VIDEO_FEED_REQUEST_START = \"VIDEO_FEED_REQUEST_START\";\r\ninterface VideoFeedRequestStartAction {\r\n  type: typeof VIDEO_FEED_REQUEST_START;\r\n}\r\n\r\nexport const VIDEO_FEED_REQUEST_SUCCESS = \"VIDEO_FEED_REQUEST_SUCCESS\";\r\ninterface VideoFeedRequestSuccessAction {\r\n  type: typeof VIDEO_FEED_REQUEST_SUCCESS;\r\n  data: VideoItem[];\r\n}\r\nexport const VIDEO_FEED_REQUEST_FAILURE = \"VIDEO_FEED_REQUEST_FAILURE\";\r\ninterface VideoFeedRequestFailAction {\r\n  type: typeof VIDEO_FEED_REQUEST_FAILURE;\r\n  errorMessage: string;\r\n}\r\n\r\nexport type VideoStateActionTypes =\r\n  | VideoFeedRequestStartAction\r\n  | VideoFeedRequestSuccessAction\r\n  | VideoFeedRequestFailAction\r\n  | SetSourceAction;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\nimport {VideoSources} from \"../../store/videos/types\";\r\nimport {VideosProps} from \"./types\";\r\n\r\nexport default function SourceSelector(props: VideosProps) {\r\n  return (\r\n    <form>\r\n      <div className=\"form-group row justify-content-center\">\r\n        <label htmlFor=\"videoType\" className=\"col-sm-5 col-form-label p-0\">\r\n          Select video type\r\n        </label>\r\n        <div className=\"col-sm-5 p-0\">\r\n          <select\r\n            id=\"videoType\"\r\n            className=\"form-control\"\r\n            value={props.source}\r\n            onChange={e => {\r\n              let videoSource;\r\n              if (e.target.value === VideoSources.facebook) {\r\n                videoSource = VideoSources.facebook;\r\n              } else if (e.target.value === VideoSources.youtube) {\r\n                videoSource = VideoSources.youtube;\r\n              } else if (e.target.value === VideoSources.url) {\r\n                videoSource = VideoSources.url;\r\n              } else {\r\n                videoSource = undefined;\r\n              }\r\n              props.setSource(videoSource);\r\n            }}\r\n          >\r\n            <option>All Videos</option>\r\n            {_.map(VideoSources, source => (\r\n              <option key={source} value={source}>\r\n                {source}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {VideoProps} from \"./types\";\r\n\r\nexport default function FacebookVideo(props: VideoProps) {\r\n  return (\r\n    <iframe\r\n      src={props.viewVideoItem.finalUrl}\r\n      title={props.viewVideoItem.title}\r\n      className=\"embed-responsive-item\"\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {VideoProps} from \"./types\";\r\n\r\nexport default function GenericVideo(props: VideoProps) {\r\n  return (\r\n    <video controls className=\"embed-responsive-item\">\r\n      <source src={props.viewVideoItem.finalUrl} />\r\n    </video>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport numeral from \"numeral\";\r\nimport {VideoSources} from \"../../store/videos/types\";\r\nimport {VideoProps} from \"./types\";\r\nimport IframeVideo from \"./IframeVideo\";\r\nimport GenericVideo from \"./GenericVideo\";\r\nimport noDataFound from \"./noDataFound.png\";\r\n\r\nexport default function VideoContainer(props: VideoProps) {\r\n  return (\r\n    <div className=\"row mb-5 justify-content-center\">\r\n      <article className=\"VideoContainer card col-sm-10 pl-0 pr-0\">\r\n        <div className=\"card-body pl-0 pr-0 pb-0\">\r\n          {props.viewVideoItem.dataMissing ? (\r\n            <div className=\"row justify-content-center\">\r\n              <img\r\n                className=\"img-fluid p-5\"\r\n                src={noDataFound}\r\n                alt=\"Data is missing\"\r\n              />\r\n            </div>\r\n          ) : (\r\n            <>\r\n              <div className=\"row justify-content-between\">\r\n                <h6 className=\"videoTitle ml-5\">{props.viewVideoItem.title}</h6>\r\n                <span className=\"mr-5\">\r\n                  {numeral(props.viewVideoItem.views)\r\n                    .format(\"0.0a\")\r\n                    .toUpperCase()}{\" \"}\r\n                  views\r\n                </span>\r\n              </div>\r\n              <div className=\"embed-responsive embed-responsive-16by9 mt-3\">\r\n                {(props.viewVideoItem.source === VideoSources.facebook ||\r\n                  props.viewVideoItem.source === VideoSources.youtube) && (\r\n                  <IframeVideo viewVideoItem={props.viewVideoItem} />\r\n                )}\r\n                {props.viewVideoItem.source === VideoSources.url && (\r\n                  <GenericVideo viewVideoItem={props.viewVideoItem} />\r\n                )}\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      </article>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\nimport {VideosProps} from \"./types\";\r\nimport SourceSelector from \"./SourceSelector\";\r\nimport VideoContainer from \"./VideoContainer\";\r\nimport \"./index.scss\";\r\n\r\nclass VideosPage extends React.Component<VideosProps> {\r\n  componentDidMount() {\r\n    this.props.loadData();\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <h1 className=\"pageTitle\">VIDEO FEED</h1>\r\n        <SourceSelector {...this.props} />\r\n        {_.map(this.props.viewVideoItems, viewVideoItem => {\r\n          return (\r\n            <VideoContainer\r\n              viewVideoItem={viewVideoItem}\r\n              key={`${viewVideoItem.source}${viewVideoItem.title}${\r\n                viewVideoItem.videoId\r\n              }`}\r\n            />\r\n          );\r\n        })}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default VideosPage;\r\n","import _ from \"lodash\";\nimport {\n  VIDEO_FEED_REQUEST_START,\n  VIDEO_FEED_REQUEST_SUCCESS,\n  VIDEO_FEED_REQUEST_FAILURE,\n  SET_SOURCE,\n  VideoSources\n} from \"./types\";\nimport {AppState} from \"../rootReducer\";\n\nexport function fetchVideos() {\n  return {\n    types: [\n      VIDEO_FEED_REQUEST_START,\n      VIDEO_FEED_REQUEST_SUCCESS,\n      VIDEO_FEED_REQUEST_FAILURE\n    ],\n    getURL: (state: AppState) =>\n      `/data${_.isString(state.videos.source) ? \"/\" + state.videos.source : \"\"}`\n  };\n}\nexport function setSource(source?: VideoSources) {\n  return {\n    type: SET_SOURCE,\n    source\n  };\n}\n","import {connect} from \"react-redux\";\nimport {ThunkDispatch} from \"redux-thunk\";\nimport Videos from \"../../components/videos\";\nimport {VideoSources} from \"../../store/videos/types\";\nimport {fetchVideos, setSource} from \"../../store/videos/actions\";\nimport {AppState} from \"../../store/rootReducer\";\n\nconst mapStateToProps = (state: AppState) => state.videos;\nconst mapDispatchToProps = (dispatch: ThunkDispatch<{}, {}, any>) => {\n  return {\n    loadData: () => {\n      dispatch(fetchVideos());\n    },\n    setSource: (source?: VideoSources) => {\n      dispatch(setSource(source));\n      dispatch(fetchVideos());\n    }\n  };\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Videos);\n","import React from \"react\";\nimport Videos from \"./containers/connectedVideos\";\nimport \"./App.scss\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nfunction App() {\n  return (\n    <div className=\"container-fluid\">\n      <Videos />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import _ from \"lodash\";\nvar fail = (message: string) => {\n  throw new Error(message || \"Assertion failed\");\n};\ntype Class = {new (...args: any[]): any};\nconst Assert = {\n  /**\n   * Unconditional fail. Useful for fall-through switch or if series.\n   * @param {string} message\n   * @throws {gs.error.AssertionError}\n   */\n  fail: fail,\n\n  /**\n   * Ensure value is an Array.\n   * @param {Array} value\n   * @param {string=} message\n   * @throws {gs.error.AssertionError}\n   */\n  isArray: function(value: any, message: string) {\n    if (!_.isArray(value)) {\n      fail(message || \"value is not an array: \" + value);\n    }\n  },\n\n  /**\n   * @param {Array} value\n   * @param {string=} message\n   * @throws {gs.error.AssertionError}\n   */\n  isNotEmptyArray: function(value: any, message: string) {\n    if (!(_.isArray(value) && value.length > 0)) {\n      fail(message || \"value is not an empty array: \" + value);\n    }\n  },\n\n  /**\n   * Ensure value is a boolean.\n   * @param {boolean} value\n   * @param {string=} message\n   * @throws {gs.error.AssertionError}\n   */\n  isBoolean: function(value: any, message: string) {\n    if (!_.isBoolean(value)) {\n      fail(message || \"value is not a boolean: \" + value);\n    }\n  },\n\n  /**\n   * Ensure value is not undefined.\n   * @param {*} value\n   * @param {string=} message\n   * @throws {gs.error.AssertionError}\n   */\n  isDefined: function(value: any, message: string) {\n    if (_.isUndefined(value)) {\n      fail(message || \"value is not defined: \" + value);\n    }\n  },\n\n  /**\n   * Ensure value is a function.\n   * @param {function} value\n   * @param {string=} message\n   * @throws {gs.error.AssertionError}\n   */\n  isFunction: function(value: any, message: string) {\n    if (!_.isFunction(value)) {\n      fail(message || \"value is not a function: \" + value);\n    }\n  },\n\n  /**\n   * Ensure value is null.\n   * @param {*} value\n   * @param {string=} message\n   * @throws {gs.error.AssertionError}\n   */\n  isNull: function(value: any, message: string) {\n    if (!_.isNull(value)) {\n      fail(message || \"value is not null: \" + value);\n    }\n  },\n\n  /**\n   * Ensure value is a number.\n   * @param {number} value\n   * @param {string=} message\n   * @throws {gs.error.AssertionError}\n   */\n  isNumber: function(value: any, message: string) {\n    if (!_.isNumber(value)) {\n      fail(message || \"value is not a number: \" + value);\n    }\n  },\n\n  /**\n   * Ensure value is an object.\n   * @param {object} value\n   * @param {string=} message\n   * @throws {gs.error.AssertionError}\n   */\n  isObject: function(value: any, message: string) {\n    if (!_.isObject(value)) {\n      fail(message || \"value is not an object: \" + value);\n    }\n  },\n\n  /**\n   * Ensure value is a string.\n   * @param {string} value\n   * @param {string=} message\n   * @throws {gs.error.AssertionError}\n   */\n  isString: function(value: any, message: string) {\n    if (!_.isString(value)) {\n      fail(message || \"value is not a string: \" + value);\n    }\n  },\n\n  /**\n   * Ensure value is a string and not empty.\n   * @param {string} value\n   * @param {string=} message\n   * @throws {gs.error.AssertionError}\n   */\n  isNotEmptyString: function(value: any, message: string) {\n    if (!(_.isString(value) && value.length > 0)) {\n      fail(message || \"value is not a string with characters: \" + value);\n    }\n  },\n\n  /**\n   * Ensure expression or value is true.\n   * @param {boolean} expression\n   * @param {string=} message\n   * @throws {gs.error.AssertionError}\n   */\n  isTrue: function(expression: any, message: string) {\n    if (expression !== true) {\n      fail(message || \"expression is not true: \" + expression);\n    }\n  },\n\n  /**\n   * Ensure expression or value is false.\n   * @param {boolean} expression\n   * @param {string=} message\n   * @throws {gs.error.AssertionError}\n   */\n  isFalse: function(expression: any, message: string) {\n    if (expression !== false) {\n      fail(message || \"expression is not false: \" + expression);\n    }\n  },\n\n  /**\n   * Ensure object is instance of class\n   * @param {object} object\n   * @param {Class} clazz\n   * @param {string=} message\n   * @throws {gs.error.AssertionError}\n   */\n  isInstanceOf: function(object: any, clazz: Class, message: string) {\n    if (!(object instanceof clazz)) {\n      fail(message || \"object is not instance of \" + clazz);\n    }\n  },\n\n  /**\n   * Ensure value is not undefined.\n   * @param {*} value\n   * @param {string=} message\n   * @throws {gs.error.AssertionError}\n   */\n  isUndefined: function(value: any, message: string) {\n    if (!_.isUndefined(value)) {\n      fail(message || \"value is not undefined: \" + value);\n    }\n  },\n\n  /**\n   * Ensure value is not null.\n   * @param {*} value\n   * @param {string=} message\n   * @throws {gs.error.AssertionError}\n   */\n  notNull: function(value: any, message: string) {\n    if (_.isNull(value)) {\n      fail(message || \"value is null\");\n    }\n  }\n};\nexport default Assert;\n","import _ from \"lodash\";\r\nimport {Middleware, MiddlewareAPI, Dispatch} from \"redux\";\r\nimport Assert from \"../utils/Assert\";\r\nimport {AppState} from \"../store/rootReducer\";\r\n\r\ninterface FetchAction {\r\n  types: string[];\r\n  method?: string;\r\n  basicToken?: string;\r\n  getURL: (state: AppState) => string;\r\n  shouldPerformRequest?: (state: AppState) => boolean;\r\n  payload?: Object;\r\n}\r\nconst fetchMiddleware: Middleware<Dispatch, AppState> = ({\r\n  dispatch,\r\n  getState\r\n}: MiddlewareAPI) => {\r\n  return (next: Dispatch) => (action: FetchAction) => {\r\n    const {\r\n      types,\r\n      getURL,\r\n      basicToken,\r\n      shouldPerformRequest,\r\n      payload = {},\r\n      method = \"GET\"\r\n    } = action;\r\n\r\n    if (!_.isArray(types)) {\r\n      // other action type: pass it on\r\n      return next(<any>action);\r\n    }\r\n\r\n    Assert.isTrue(types.length === 3, \"Invalid types length\");\r\n    types.forEach(type => {\r\n      Assert.isNotEmptyString(type, \"Invalid type\");\r\n    });\r\n    Assert.isFunction(getURL, 'Invalid \"getURL\" type');\r\n    Assert.isTrue(\r\n      _.isUndefined(shouldPerformRequest) || _.isFunction(shouldPerformRequest),\r\n      'Invalid \"getURL\" type'\r\n    );\r\n\r\n    if (\r\n      _.isFunction(shouldPerformRequest) &&\r\n      !shouldPerformRequest(getState())\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    const [requestType, successType, failureType] = types;\r\n\r\n    dispatch({type: requestType});\r\n\r\n    let options: {\r\n      method: string;\r\n      body?: string;\r\n      headers: {[propName: string]: string};\r\n    } = {\r\n      method,\r\n      headers: {\r\n        \"Content-Type\": \"application/json;charset=UTF-8\"\r\n      }\r\n    };\r\n    if (method === \"POST\" || method === \"PUT\") {\r\n      options.body = JSON.stringify(payload);\r\n    }\r\n    if (_.isString(basicToken)) {\r\n      options.headers[\"Authorization\"] = `Basic ${basicToken}`;\r\n    }\r\n    return fetch(getURL(getState()), options)\r\n      .then(response => {\r\n        return response.text().then(text => {\r\n          return text.length > 0\r\n            ? {\r\n                data: JSON.parse(text),\r\n                isOk: response.ok\r\n              }\r\n            : {\r\n                data: {},\r\n                isOk: response.ok\r\n              };\r\n        });\r\n      })\r\n      .then(parsedResponse => {\r\n        if (parsedResponse.isOk) {\r\n          dispatch({type: successType, data: parsedResponse.data});\r\n          return true;\r\n        } else {\r\n          dispatch({\r\n            type: failureType,\r\n            errorMessage: JSON.stringify(parsedResponse)\r\n          });\r\n        }\r\n        return false;\r\n      })\r\n      .catch((error: {message: string}) => {\r\n        dispatch({type: failureType, errorMessage: error.message});\r\n        return false;\r\n      });\r\n  };\r\n};\r\nexport default fetchMiddleware;\r\n","import _ from \"lodash\";\nimport {\n  VIDEO_FEED_REQUEST_START,\n  VIDEO_FEED_REQUEST_SUCCESS,\n  VIDEO_FEED_REQUEST_FAILURE,\n  SET_SOURCE,\n  VideoStateActionTypes,\n  VideosState,\n  VideoSources,\n  ViewVideoItem,\n  VideoItem\n} from \"./types\";\n\nfunction getTransformedVideoItem(videoItem: VideoItem): ViewVideoItem {\n  if (\n    _.isUndefined(videoItem.title) ||\n    _.isUndefined(videoItem.source) ||\n    _.isUndefined(videoItem.views)\n  ) {\n    return {\n      ...videoItem,\n      dataMissing: true\n    };\n  }\n  if (videoItem.source === VideoSources.url) {\n    if (_.isUndefined(videoItem.url)) {\n      return {\n        ...videoItem,\n        dataMissing: true\n      };\n    }\n    return {...videoItem, finalUrl: videoItem.url};\n  } else if (videoItem.source === VideoSources.youtube) {\n    if (_.isUndefined(videoItem.videoId)) {\n      return {\n        ...videoItem,\n        dataMissing: true\n      };\n    }\n    return {\n      ...videoItem,\n      finalUrl: `https://www.youtube.com/embed/${videoItem.videoId}`\n    };\n  } else if (videoItem.source === VideoSources.facebook) {\n    if (_.isUndefined(videoItem.videoId) || _.isUndefined(videoItem.userName)) {\n      return {\n        ...videoItem,\n        dataMissing: true\n      };\n    }\n    return {\n      ...videoItem,\n      finalUrl: `https://www.facebook.com/plugins/video.php?href=https%3A%2F%2Fwww.facebook.com%2F${\n        videoItem.userName\n      }%2Fvideos%2F${videoItem.videoId}`\n    };\n  } else {\n    return videoItem;\n  }\n}\n\nconst defaultVideosState: VideosState = {\n  source: undefined,\n  errorMessage: \"\",\n  viewVideoItems: []\n};\n\nexport default function videos(\n  state = defaultVideosState,\n  action: VideoStateActionTypes\n) {\n  switch (action.type) {\n    case SET_SOURCE: {\n      return {...state, source: action.source};\n    }\n    case VIDEO_FEED_REQUEST_START: {\n      return {...state, errorMessage: \"\"};\n    }\n    case VIDEO_FEED_REQUEST_SUCCESS: {\n      return {\n        ...state,\n        viewVideoItems: _.map(action.data, getTransformedVideoItem)\n      };\n    }\n    case VIDEO_FEED_REQUEST_FAILURE: {\n      return {\n        ...state,\n        errorMessage: action.errorMessage\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import {combineReducers} from \"redux\";\nimport videos from \"./videos/reducers\";\n\nconst rootReducer = combineReducers({\n  videos\n});\nexport default rootReducer;\nexport type AppState = ReturnType<typeof rootReducer>;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport {Provider} from \"react-redux\";\nimport configureStore from \"./store\";\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import {applyMiddleware, createStore} from \"redux\";\nimport {composeWithDevTools} from \"redux-devtools-extension\";\nimport {createLogger} from \"redux-logger\";\nimport fetchMiddleware from \"../middleware/fetchMiddleware\";\nimport rootReducer from \"./rootReducer\";\n\nexport default function configureStore(preloadedState: any) {\n  const loggerMiddleware = createLogger();\n  const middlewares = [loggerMiddleware, fetchMiddleware];\n  const middlewareEnhancer = applyMiddleware(...middlewares);\n\n  const enhancers = [middlewareEnhancer];\n  const composedEnhancers = composeWithDevTools(...enhancers);\n\n  const store = createStore(rootReducer, preloadedState, composedEnhancers);\n\n  return store;\n}\n"],"sourceRoot":""}